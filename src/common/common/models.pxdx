"""
This module has all models in project due to current cython dataclass implementation.
Should be split to different files when possible.
"""
import cython

from src.common.common.dataclass cimport BaseDataclass


cdef class DocumentBase(BaseDataclass):
    pass

@cython.dataclasses.dataclass(kw_only=True)
cdef class Document(DocumentBase):
    cdef public str _id

@cython.dataclasses.dataclass(kw_only=True)
cdef class GameAuth(BaseDataclass):
    cdef public char server_id
    cdef public long play_ok1
    cdef public long play_ok2
    cdef public long login_ok1
    cdef public long login_ok2

@cython.dataclasses.dataclass(kw_only=True)
cdef class Account(Document):
    cdef public int id
    cdef public str username
    cdef public str password

    cdef public char status
    cdef public char last_server
    cdef public str last_character
    cdef public str salt
    cdef public str email
    cdef public GameAuth game_auth

@cython.dataclasses.dataclass(kw_only=True)
cdef class GameServer(Document):
    cdef public char id
    cdef public str host
    cdef public int port

    cdef public char age_limit
    cdef public bint is_pvp
    cdef public short online_count
    cdef public short max_online
    cdef public bint is_online
    cdef public int type
    cdef public char brackets
    cdef public long last_alive


@cython.dataclasses.dataclass(kw_only=True)
cdef class IDFactory(Document):
    cdef public str name
    cdef public long counter


# 
# cdef class CharacterBase(CharacterStructure):
#     cdef public str account_username
#
#     cdef public long sex
#     cdef public long race
#     cdef public long base_class
#     cdef public long active_class
#
#     cdef public CharacterAppearance appearance
#
#     cdef public long delete_at
#     cdef public list friends
#     cdef public Inventory inventory
#
#     cdef public long active
#     cdef public long karma
#
#     cdef public long pk_kills
#     cdef public long pvp_kills


@cython.dataclasses.dataclass(kw_only=True)
cdef class L2Object(BaseDataclass):
    cdef public long id
    cdef public str name
    cdef public Position position
    cdef public bint is_visible
    cdef public ObjectPolymorph poly


@cython.dataclasses.dataclass(kw_only=True)
cdef class Playable(L2Object):
    cdef public Playable target

@cython.dataclasses.dataclass(kw_only=True)
cdef class Point3D(BaseDataclass):
    cdef public long x
    cdef public long y
    cdef public long z

@cython.dataclasses.dataclass(kw_only=True)
cdef class ObjectPolymorph(BaseDataclass):
    cdef public long id
    cdef public long type

@cython.dataclasses.dataclass(kw_only=True)
cdef class Position(BaseDataclass):
    cdef public long heading_angle
    cdef public Point3D point3d
    cdef public WorldRegion region



@cython.dataclasses.dataclass(kw_only=True)
cdef class ItemProperties(BaseDataclass):
    cdef public bint crystallizable
    cdef public bint stackable
    cdef public bint sellable
    cdef public bint droppable
    cdef public bint destroyable
    cdef public bint tradable
    cdef public bint degradable


@cython.dataclasses.dataclass(kw_only=True)
cdef class Crystallization(BaseDataclass):
    cdef public long type
    cdef public long count


@cython.dataclasses.dataclass(kw_only=True)
cdef class ItemTemplate(L2Object):
    cdef public long type
    cdef public long  inventory_type
    cdef public long special_type
    cdef public long weight
    cdef public long material
    cdef public Crystallization crystallization
    cdef public long duration
    cdef public str body_part
    cdef public long price
    cdef public ItemProperties properties

    cdef public list skills
    cdef public long object_id


@cython.dataclasses.dataclass(kw_only=True)
cdef class Item(ItemTemplate):
    cdef public long owner_id
    cdef public long count
    cdef public long initial_count
    cdef public long usage_time
    cdef public ItemTemplate item_template
    cdef public long location
    cdef public long slot
    cdef public long enchant
    cdef public long price_sell
    cdef public long price_buy
    cdef public bint wear
    cdef public long drop_time
    cdef public long protected

    cdef public bint decrease
    cdef public long augmentation
    cdef public long mana
    cdef public bint consuming_mana
    cdef public long mana_consumption_rate

    cdef public long charged_soulshot
    cdef public long charged_spiritshot
    cdef public bint charged_fishshot

    cdef public long last_change

    cdef public bint is_equipped
    cdef public long enchant_level
    cdef public char crystal_type


@cython.dataclasses.dataclass(kw_only=True)
cdef class Armor(Item):
    cdef public long avoid_modifier
    cdef public long physical_defense
    cdef public long magic_defense
    cdef public long mp_bonus
    cdef public long hp_bonus

    cdef public list passive_skill


@cython.dataclasses.dataclass(kw_only=True)
cdef class Weapon(Item):
    cdef public long soulshot_count
    cdef public long spiritshot_count
    cdef public long physical_damage
    cdef public long random_damage
    cdef public long critical
    cdef public double hit_modifier
    cdef public long avoid_modifier
    cdef public double shield_defense_rate
    cdef public long attack_speed
    cdef public long attack_reuse
    cdef public long mp_consumption
    cdef public long magic_damage

    cdef public list passive_skill
    cdef public list enchant4_skill

    cdef public list skills_on_hit
    cdef public list skills_on_cast


@cython.dataclasses.dataclass(kw_only=True)
cdef class EtcItem(Item):
    cdef public str etc


@cython.dataclasses.dataclass(kw_only=True)
cdef class PaperDoll(BaseDataclass):
    cdef public Armor under
    cdef public Armor left_ear
    cdef public Armor right_ear
    cdef public Armor neck
    cdef public Armor left_finger
    cdef public Armor right_finger
    cdef public Armor head
    cdef public Weapon right_hand
    cdef public Weapon left_hand
    cdef public Armor gloves
    cdef public Armor chest
    cdef public Armor legs
    cdef public Armor feet
    cdef public Armor back
    cdef public Armor face
    cdef public Armor hair
    cdef public Armor hair_all
    cdef public Weapon double_handed


@cython.dataclasses.dataclass(kw_only=True)
cdef class Inventory(BaseDataclass):
    cdef public PaperDoll equipped_items
    cdef public list items

@cython.dataclasses.dataclass(kw_only=True)
cdef class CharacterAppearance(BaseDataclass):
    cdef public long face_id
    cdef public long hair_style
    cdef public long hair_color


@cython.dataclasses.dataclass(kw_only=True)
cdef class AttacksBuffs(BaseDataclass):
    cdef public long physical_plants
    cdef public long physical_insects
    cdef public long physical_animals
    cdef public long physical_monsters
    cdef public long physical_dragons
    cdef public long physical_undead


@cython.dataclasses.dataclass(kw_only=True)
cdef class CharacterStructure(Playable):
    cdef public Stats stats
    cdef public Status status
    cdef public CharacterTemplate template
    cdef public list attacked_by
    cdef public Skill last_skill
    cdef public long last_heal_amount
    cdef public str title
    cdef public str ai_class
    cdef public UpdateChecks hp_updates
    cdef public list skills
    cdef public WorldRegion current_zone
    cdef public long name_color
    cdef public long title_color

@cython.dataclasses.dataclass(kw_only=True)
cdef class ConsumeRates(BaseDataclass):
    cdef public long mp
    cdef public long hp

@cython.dataclasses.dataclass(kw_only=True)
cdef class Effects(BaseDataclass):
    cdef public bint is_afraid
    cdef public bint is_confused
    cdef public bint is_faking_death
    cdef public bint is_flying
    cdef public bint is_muted
    cdef public bint is_physically_muted
    cdef public bint is_dead
    cdef public bint is_immobilized
    cdef public bint is_overloaded
    cdef public bint is_paralyzed
    cdef public bint is_riding
    cdef public bint is_pending_revive
    cdef public bint is_rooted
    cdef public bint is_sleeping
    cdef public bint is_stunned
    cdef public bint is_betrayed

@cython.dataclasses.dataclass(kw_only=True)
cdef class EquippedItems(BaseDataclass):
    cdef public long under
    cdef public long left_ear
    cdef public long right_ear
    cdef public long necklace
    cdef public long right_finger
    cdef public long left_finger
    cdef public long head
    cdef public long right_hand
    cdef public long left_hand
    cdef public long gloves
    cdef public long chest
    cdef public long legs
    cdef public long feet
    cdef public long back
    cdef public long double_handed
    cdef public long hair

@cython.dataclasses.dataclass(kw_only=True)
cdef class Limits(BaseDataclass):
    cdef public long inventory
    cdef public long warehouse
    cdef public long freight
    cdef public long sell
    cdef public long buy
    cdef public long dwarf_recipe
    cdef public long common_recipe

@cython.dataclasses.dataclass(kw_only=True)
cdef class Reflections(BaseDataclass):
    cdef public long damage_percent
    cdef public long magic_skill
    cdef public long physical_skill
    cdef public long absorb_percent
    cdef public long transfer_percent

@cython.dataclasses.dataclass(kw_only=True)
cdef class Resists(BaseDataclass):
    cdef public long breath
    cdef public long aggression
    cdef public long confusion
    cdef public long movement
    cdef public long sleep
    cdef public long fire
    cdef public long wind
    cdef public long water
    cdef public long earth
    cdef public long holy
    cdef public long dark

@cython.dataclasses.dataclass(kw_only=True)
cdef class BaseStats(BaseDataclass):
    cdef public long STR
    cdef public long CON
    cdef public long DEX
    cdef public long INT
    cdef public long WIT
    cdef public long MEN


@cython.dataclasses.dataclass(kw_only=True)
cdef class Stats(BaseDataclass):
    cdef public long max_hp
    cdef public long max_mp
    cdef public long max_cp
    cdef public double regen_hp
    cdef public double regen_mp
    cdef public double regen_cp
    cdef public double gain_mp
    cdef public double gain_hp
    cdef public long physical_defense
    cdef public long magic_defense
    cdef public long physical_attack
    cdef public long magic_attack
    cdef public long physical_attack_speed
    cdef public long magic_attack_speed
    cdef public long magic_reuse_rate
    cdef public long shield_defense
    cdef public long critical_damage
    cdef public long pvp_physical_damage
    cdef public long pvp_magic_damage
    cdef public long pvp_physical_skill_damage
    cdef public long accuracy
    cdef public long physical_attack_range
    cdef public long magic_attack_range
    cdef public long physical_attack_angle
    cdef public long attack_count_max
    cdef public long run_speed
    cdef public long walk_speed
    cdef public long swim_run_speed
    cdef public long swim_walk_speed
    cdef public long ride_run_speed
    cdef public long ride_walk_speed
    cdef public long fly_run_speed
    cdef public long fly_walk_speed
    cdef public BaseStats base
    cdef public Resists resists
    cdef public long long exp
    cdef public long sp
    cdef public long level
    cdef public long evasion
    cdef public int recommends_received
    cdef public char recommends_left
    cdef public double move_multiplier
    cdef public double attack_speed_multiplier
    cdef public long karma

@cython.dataclasses.dataclass(kw_only=True)
cdef class Status(BaseDataclass):
    cdef public long cp
    cdef public long hp
    cdef public long mp

    cdef public long weight_load

    cdef public bint is_faking_death
    cdef public bint is_in_combat
    cdef public bint is_pvp
    cdef public bint is_running
    cdef public bint is_sitting
    cdef public bint is_hero
    cdef public bint is_noble
    cdef public bint is_private_store
    cdef public bint is_dwarf_craft_store
    cdef public bint is_mounted
    cdef public bint is_fishing
    cdef public bint is_invulnerable
    cdef public bint is_teleporting
    cdef public bint is_betrayed
    cdef public bint is_afraid
    cdef public bint is_confused
    cdef public bint is_flying
    cdef public bint is_muted
    cdef public bint is_physically_muted
    cdef public bint is_dead
    cdef public bint is_immobilized
    cdef public bint is_overloaded
    cdef public bint is_paralyzed
    cdef public bint is_riding
    cdef public bint is_pending_revive
    cdef public bint is_rooted
    cdef public bint is_sleeping
    cdef public bint is_stunned

@cython.dataclasses.dataclass(kw_only=True)
cdef class LevelUpIncrease(BaseDataclass):
    cdef public float base
    cdef public float add
    cdef public float mod


@cython.dataclasses.dataclass(kw_only=True)
cdef class LevelUpGain(BaseDataclass):
    cdef public long level
    cdef public LevelUpIncrease hp
    cdef public LevelUpIncrease cp
    cdef public LevelUpIncrease mp


@cython.dataclasses.dataclass(kw_only=True)
cdef class ClassInfo(BaseDataclass):
    cdef public char id
    cdef public str name
    cdef public long base_level


@cython.dataclasses.dataclass(kw_only=True)
cdef class CharacterTemplate(BaseDataclass):
    cdef public ClassInfo class_info
    cdef public Stats stats
    cdef public char race
    cdef public LevelUpGain level_up_gain
    cdef public Point3D spawn

    cdef public double collision_radius
    cdef public double collision_height
    cdef public long load

    cdef public long mp_consume_rate
    cdef public long hp_consume_rate

    cdef public list items

@cython.dataclasses.dataclass(kw_only=True)
cdef class UpdateChecks(BaseDataclass):
    cdef public long long increase
    cdef public long long decrease
    cdef public long long interval

@cython.dataclasses.dataclass(kw_only=True)
cdef class WeaponVulnerabilities(BaseDataclass):
    cdef public long shield
    cdef public long sword
    cdef public long blunt
    cdef public long dagger
    cdef public long bow
    cdef public long pole
    cdef public long etc
    cdef public long fist
    cdef public long dual
    cdef public long dual_fist

@cython.dataclasses.dataclass(kw_only=True)
cdef class Skill(BaseDataclass):
    cdef public str activation_type
    cdef public long target_type
    cdef public long type

@cython.dataclasses.dataclass(kw_only=True)
cdef class WorldRegion(BaseDataclass):
    cdef public list playable_objects
    cdef public list visible_objects
    cdef public list neighbours
    cdef public long tile_x
    cdef public long tile_y
    cdef public bint active
